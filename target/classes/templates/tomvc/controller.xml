<?xml version="1.0" encoding="utf-8"?>
<template>
	<name>controller</name>
	<filePath>Work/qitoon/app/recruit/wui/src/main/java/${packageName}/${moduleName}/controller/${subModuleName}</filePath>
	<fileName>${ClassName}Controller.java</fileName>
	<content><![CDATA[
/**
 * 
 */
package ${packageName}.${moduleName}.controller<#if subModuleName != "">.${subModuleName}</#if>;

import java.io.IOException;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import com.alibaba.fastjson.JSONObject;
import ${packageName}.${moduleName}.bean.${ClassName};
import ${packageName}.${moduleName}.common.JsonResponse;
import ${packageName}.${moduleName}.common.PageInfo;
import ${packageName}.${moduleName}.service.${ClassName}Service;
import ${packageName}.core.mybaits.Page;
import ${packageName}.utils.StringUtils;

/**
 * 
 * @ClassName: ${ClassName}Controller
 * @author ${functionAuthor}
 * @date ${functionVersion}
 * Copyright: Copyright (c) 2016 
 * Company:ToB中心
 */
@Controller
@RequestMapping(value="/${className}")
public class ${ClassName}Controller {

	@Autowired
	private ${ClassName}Service ${className}Service;
	
	//////////////////公共方法///////////////////////////////////////////////////////////////////////////////////////////////////
	/**
	 * 分页查询${ClassName}
	 * @param ${className}
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/queryListPage")
    public JSONObject queryListPage(${ClassName} ${className},@RequestBody PageInfo<${ClassName}> pagev) throws IOException {
		try {
			Page page = new Page();
    		page.setCurrentPage(pagev.getCurPage());
    		page.setPageCount(pagev.getPageSize());
    		page.setParam(${className});
			List<${ClassName}> list = ${className}Service.queryListPage(page);
			int totalCount = ${className}Service.getCount();
			PageInfo<${ClassName}> pageInfo = new PageInfo<${ClassName}>();
			pageInfo.setCurPage(pagev.getCurPage());
			pageInfo.setPageSize(pagev.getPageSize());
			pageInfo.setTotalCount(totalCount);
			pageInfo.setData(list);
            return JsonResponse.success(pageInfo);
        }catch(Exception e){
            return JsonResponse.error("", e);
        }
    }
	
	/**
	 * 查询全部${ClassName}
	 * @param ${className}
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/queryAll")
    public JSONObject queryAll() throws IOException {
		try {
			List<${ClassName}> list = ${className}Service.queryAll();
            return JsonResponse.success(list);
        }catch(Exception e){
            return JsonResponse.error("", e);
        }
    }

	/**
	 * 插入${ClassName}
	 * @param ${className}
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/insert",method = RequestMethod.POST)
    public JSONObject insert(${ClassName} ${className}) throws IOException {
		int result = 0;
		try {
			result = ${className}Service.updateByIdSelective(${className});
		} catch (Exception e) {
			return JsonResponse.error("系统异常", e);
		}
		if(result >= 1){
			return JsonResponse.success("保存成功！");
		}else{
			return JsonResponse.fail("保存失败");
		}
    }
	
	/**
	 * 修改${ClassName}
	 * @param ${className}
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/modify",method = RequestMethod.POST)
    public JSONObject update(${ClassName} ${className}) throws IOException {
		int result = 0;
		try {
			result = ${className}Service.updateByIdSelective(${className});
		} catch (Exception e) {
			return JsonResponse.error("系统异常", e);
		}
		if(result >= 1){
			return JsonResponse.success("更新成功！");
		}else{
			return JsonResponse.fail("更新失败");
		}
    }
	
	/**
	 * 修改${ClassName}
	 * @param id 
	 * @return
	 */
	@ResponseBody
	@RequestMapping(value = "/deleteById")
    public JSONObject deleteById(@RequestParam(required=true) String id) throws IOException {
		try {
			${className}Service.deleteById(Long.getLong(id));
		} catch (Exception e) {
			return JsonResponse.error("系统异常", e);
		}
		return JsonResponse.success("删除成功！");
    }
	
	@ResponseBody
	@RequestMapping(value = "/selectById")
	public JSONObject getById(@RequestParam(required=true) String id) {
		${ClassName} entity = null;
		if (StringUtils.isNotBlank(id)){
			entity= ${className}Service.selectById(Long.getLong(id));
		}
		if (entity == null){
			entity= new ${ClassName}();
		}
		return JsonResponse.success(entity);
	}
    	//////////////////自定义方法///////////////////////////////////////////////////////////////////////////////////////////////////
}]]>
	</content>
</template>